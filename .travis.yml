#======================================================================
# Project settings
#======================================================================
# Only build master.
branches:
  only:
      - master

language: fortran

#======================================================================
# Environment
#======================================================================

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - gcc-8
      - gfortran-8
      - g++-8
      - lcov

#======================================================================
# Build Matrix
#======================================================================
matrix:
   include:
     - os: linux
       compiler: gcc
       sudo: false
       dist: trusty
       env name=real_s   core=em_real  par=32 nest=1 data_loc=em_real test=07NE proc=1 cenv='WRF_EM_CORE=1'

services:
  - docker

#======================================================================
# Building
#======================================================================
before_install:
  - |
      if [[ "$TRAVIS_OS_NAME" == "linux" ]] ; then
          pip install --user cpp-coveralls
      fi

#======================================================================
# Here are the run steps
#======================================================================
script:
  - date
  - sed -e 's/_HERE1_/"DAVE START"/' -e 's/_HERE2_/"DAVE END CLONE"/' Dockerfile-template > Dockerfile
  - date
  - docker build -t wrf_regtest --build-arg argname=regtest .
  - date
  - docker images -a
  - date
  - docker run -d -t --name ${name} wrf_regtest
  - date
  - docker ps -a
  - date
  - docker exec ${name} ./script.csh BUILD CLEAN ${par} ${nest} ${core} -d J=-j@3 $cenv
  - date
  - OK=0
  - |
      if [ $OK -eq 0 ] ; then
        echo FILE STATUS
        docker exec ${name} ls -ls WRF/main/wrf.exe
        OK_wrf=$?
        echo OK_wrf $OK_wrf
        docker exec ${name} ls -ls WRF/main/real.exe
        OK_real=$?
        echo OK_real $OK_real
        docker exec ${name} ls -ls WRF/main/real_nmm.exe
        OK_nmm=$?
        echo OK_nmm $OK_nmm
        docker exec ${name} ls -ls WRF/main/ideal.exe
        OK_ideal=$?
        echo OK_ideal $OK_ideal
      fi 
  - date
  - docker exec ${name} ls -ls WRF/main
  - |
      if [ $OK_wrf = 0 ] && ([ $OK_real = 0 ] || [ $OK_nmm = 0 ] || [ $OK_ideal = 0 ]) ; then
         date
         docker exec ${name} ./script.csh RUN ${core} ${par} ${data_loc} ${test} NP=${proc} OMP_NUM_THREADS=${proc}
         date
         docker exec ${name} cat WRF/test/${core}/real.print.out
         date
         docker exec ${name} ls -ls WRF/test/${core}
         date
         docker exec ${name} ls -ls wrfoutput
         date
      else
         docker exec ${name} gfortran --version
         docker exec ${name} gcc --version
         docker exec ${name} ls -ls WRF/main
         docker exec ${name} ls -ls WRF/compile.log.${data_loc}.${par}
         docker exec ${name} grep Error WRF/compile.log.${data_loc}.${par}
         docker exec ${name} cat WRF/compile.log.${data_loc}.${par}
         date
      fi
  - docker stop ${name}
  - date
  - docker rm ${name}
  - date
  - docker rmi wrf_regtest
  - date
  - env | grep TRAVIS_

#======================================================================
# Notifications
#======================================================================
notifications:
  email:
    recipients: gill@ucar.edu
    on_success: always
    on_failure: always

